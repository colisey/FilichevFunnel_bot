const TelegramApi = require("node-telegram-bot-api");
const token = "5760738946:AAGNz2M5GLqF3eX8r41HCUMs-wHmgyjafVA";
const sequelize = require("./db");
const UserModel = require("./models");

const { gameOptions } = require("./options");

const bot = new TelegramApi(token, { polling: true });

const chats = {};
const webAppUrl = "https://aesthetic-granita-6e61e0.netlify.app/";

const start = async () => {
  try {
    await sequelize.authenticate();
    await sequelize.sync();
  } catch (error) {
    console.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥ —Å–ª–æ–º–∞–ª–æ—Å—å = ", error);
  }

  bot.setMyCommands([
    { command: "/start", description: "–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ" },
    { command: "/info", description: "–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ" },
    { command: "/game", description: "–ü–æ–∏—Ç–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É?" },
  ]);

  bot.on("message", async (msg) => {
    const text = msg.text;
    const chatId = msg.chat.id;
    const UserId = msg.from.id;
    const img = await bot.getUserProfilePhotos(UserId);

    try {
      switch (text) {
        case "/start":
          // console.log("img", JSON.stringify(img.photos[0][0]) );
          // console.log("UserId", UserId);

          

          await bot.sendMessage(
            chatId,
            `–ù–∏–∂–µ –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞, –∑–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É üëáüëáüëá`
          );
          await bot.sendSticker(
            chatId,
            `https://tlgrm.ru/_/stickers/ef5/8e1/ef58e15f-94a2-3d56-a365-ca06e1339d08/7.webp`
          );
          // await bot.sendSticker(
          //   chatId,
          //   img
          // );
          await bot.sendMessage(
            chatId,
            `–ù–∏–∂–µ –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞, –∑–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É üëáüëáüëá`,
            {
              reply_markup: {
                inline_keyboard: [
                  [{ text: "inline_keyboard", web_app: { url: webAppUrl+'form' } }],
                ],
                // keyboard: [
                //   [
                //     { text: "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É" },
                //     { text: "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É" },
                //     { text: "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É" },
                //   ]
                // ],
              },
            }
          );
          await UserModel.create({ chatId });
          break;

        case "/info":
          const user = await UserModel.findOne({ chatId });
          await bot.sendMessage(
            chatId,
            `–ù–µ–º–Ω–æ–≥–æ –æ —Ç–µ–±–µ ${msg.chat.first_name} ${msg.chat.last_name}, –≤ –∏—Ç–æ–≥–µ —É —Ç–µ–±—è –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö ${user.right} –∏ ${user.wrong} –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö`
          );
          break;
        case "/game":
          await bot.sendSticker(
            chatId,
            `https://tlgrm.ru/_/stickers/c8f/100/c8f1006e-f329-430f-af5c-d2fb68819d44/1.webp`
          );
          await bot.sendMessage(chatId, `–ü–æ–∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É?`);
          const randomNumber = Math.floor(Math.random() * 10);

          chats[chatId] = randomNumber;
          await bot.sendMessage(chatId, `–û—Ç–≥–∞–¥—ã–≤–∞–π`, gameOptions);

          break;

        default:
          await bot.sendMessage(chatId, `–¢—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ ${text}`);
          break;
      }
    } catch (e) {
      // console.log("e", e);
      return bot.sendMessage(chatId, `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞! 11 ${e}`);
    }

    // console.log(msg);
  });
};

bot.on("callback_query", async (msg) => {
  const data = msg.data;
  const chatId = msg.message.chat.id;
  // console.log('chats',chats[chatId]);
  // console.log('data',data);

  const user = await UserModel.findOne({ chatId });

  if (data == chats[chatId]) {
    user.right += 1;
    await bot.sendMessage(chatId, `–¢—ã —É–≥–∞–¥–∞–ª —Ü—ã—Ñ—Ä–∞ –±—ã–ª–∞ ${chats[chatId]}`);
  } else {
    user.wrong += 1;
    await bot.sendMessage(chatId, `–¢—ã –ù–ï —É–≥–∞–¥–∞–ª —Ü—ã—Ñ—Ä–∞ –±—ã–ª–∞ ${chats[chatId]}`);
  }
  await user.save();

  // bot.sendMessage(chatId, `–¢—ã –≤—ã–±—Ä–∞–ª —Ü–∏—Ñ—Ä—É ${data}`);
  // console.log(msg);
});

start();
